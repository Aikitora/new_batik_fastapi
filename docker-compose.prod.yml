version: '3.8'

services:
  batik-api:
    build: .
    ports:
      - "8000:8000"
    volumes:
      - ./final_tuned_genetic_algorithm_model.keras:/app/final_tuned_genetic_algorithm_model.keras
    environment:
      - PYTHONUNBUFFERED=1
      - ENVIRONMENT=production
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.batik-api.rule=Host(`batik-fast-api.sgp.dom.my.id`)"
      - "traefik.http.routers.batik-api.entrypoints=websecure"
      - "traefik.http.routers.batik-api.tls.certresolver=letsencrypt"
      - "traefik.http.services.batik-api.loadbalancer.server.port=8000"

  # Optional: Add Traefik for SSL termination and reverse proxy
  traefik:
    image: traefik:v2.10
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.letsencrypt.acme.email=your-email@example.com"
      - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./letsencrypt:/letsencrypt
    restart: unless-stopped
    depends_on:
      - batik-api 